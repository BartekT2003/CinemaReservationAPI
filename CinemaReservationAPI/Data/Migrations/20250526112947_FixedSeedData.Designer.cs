// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CinemaReservationAPI.Data.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    [Migration("20250526112947_FixedSeedData")]
    partial class FixedSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosterImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Film o snach",
                            DurationMinutes = 148,
                            Genre = "Sci-Fi",
                            PosterImagePath = "inception-poster.jpg",
                            ReleaseDate = new DateTime(2010, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Film o podróżach kosmicznych",
                            DurationMinutes = 169,
                            Genre = "Sci-Fi",
                            PosterImagePath = "interstellar-poster.jpg",
                            ReleaseDate = new DateTime(2014, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Interstellar"
                        });
                });

            modelBuilder.Entity("Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmationDocumentPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReservationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ScreeningId")
                        .HasColumnType("int");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScreeningId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConfirmationDocumentPath = "documents/confirm_001.pdf",
                            CustomerEmail = "jan@example.com",
                            CustomerName = "Jan Kowalski",
                            IsConfirmed = true,
                            ReservationTime = new DateTime(2024, 6, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ScreeningId = 1,
                            SeatNumber = 15
                        },
                        new
                        {
                            Id = 2,
                            ConfirmationDocumentPath = "documents/confirm_002.pdf",
                            CustomerEmail = "anna@example.com",
                            CustomerName = "Anna Nowak",
                            IsConfirmed = false,
                            ReservationTime = new DateTime(2024, 6, 2, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            ScreeningId = 2,
                            SeatNumber = 22
                        });
                });

            modelBuilder.Entity("Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TheaterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("TheaterId");

                    b.ToTable("Screenings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            StartTime = new DateTime(2024, 6, 15, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TheaterId = 1
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 2,
                            StartTime = new DateTime(2024, 6, 16, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            TheaterId = 2
                        });
                });

            modelBuilder.Entity("Theater", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Theaters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 120,
                            Name = "Sala 1"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 250,
                            Name = "Sala IMAX"
                        });
                });

            modelBuilder.Entity("Reservation", b =>
                {
                    b.HasOne("Screening", "Screening")
                        .WithMany("Reservations")
                        .HasForeignKey("ScreeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Screening");
                });

            modelBuilder.Entity("Screening", b =>
                {
                    b.HasOne("Movie", "Movie")
                        .WithMany("Screenings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Theater", "Theater")
                        .WithMany("Screenings")
                        .HasForeignKey("TheaterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Theater");
                });

            modelBuilder.Entity("Movie", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("Screening", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Theater", b =>
                {
                    b.Navigation("Screenings");
                });
#pragma warning restore 612, 618
        }
    }
}
